# Generated by Django 5.0.1 on 2024-02-13 21:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Localidade',
                'verbose_name_plural': 'Localidades',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Nome do cliente')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail do cliente')),
                ('description', models.TextField(verbose_name='Descrição da mensagem')),
                ('is_readed', models.BooleanField(default=False, verbose_name='Foi lida?')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Data de criação')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
            },
        ),
        migrations.CreateModel(
            name='PlanBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do benefício')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição do benefício')),
            ],
            options={
                'verbose_name': 'Benefício do plano',
                'verbose_name_plural': 'Benefícios do plano',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email do usuário')),
                ('is_manager', models.BooleanField(default=False, verbose_name='É um administrador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do plano')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Valor do plano')),
                ('benefits', models.ManyToManyField(blank=True, to='api.planbenefit', verbose_name='Benefícios do plano')),
            ],
            options={
                'verbose_name': 'Plano',
                'verbose_name_plural': 'Planos',
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.FileField(null=True, upload_to='contratos/', verbose_name='Contrato')),
                ('is_active', models.BooleanField(default=True, verbose_name='Assinatura ativa?')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_date', models.DateField(auto_now=True, verbose_name='Data da última alteração')),
                ('expire_date', models.DateField(verbose_name='Data limite para o pagamento')),
                ('status', models.IntegerField(choices=[(0, 'Aguardando pagamento'), (1, 'Pago'), (2, 'Expirado')], default=0, verbose_name='Status')),
                ('document', models.FileField(blank=True, upload_to='', verbose_name='Boleto')),
                ('signature', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.signature')),
            ],
            options={
                'verbose_name': 'Boleto',
                'verbose_name_plural': 'Boletos',
            },
        ),
    ]
